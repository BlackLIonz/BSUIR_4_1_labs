<!DOCTYPE html>
<html>
<head>
	<title>Тема 1 Целочисленное линейное программирование</title>
	<meta http-equiv="Content-Language" content="ru" />
	<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
	<link rel="stylesheet" type="text/css" href="../../css/textStyle.css">
<script type="text/javascript" src="http://latex.codecogs.com/latexit.js"></script>
</head>
<body>
	<div title="top" class="div-p-top">
		<h1 class="Top">
			<a href="../../theory.htm">[оглавление]</a>
			<a href="../lk2/lk2.htm">[следующая тема]</a>
		</h1>
		<hr>
		<p>&nbsp;</p>
		<h1>Тема 1 Целочисленное линейное программирование</h1>
		<p>&nbsp;</p>
		<hr>
		<p>&nbsp;</p>
	</div>
<style>
        img {
            vertical-align: middle;

 }


    </style>
	<p>
		&emsp;<a href="#t1">1.1 Примеры прикладных задач, содержащих условия целочисленности. Постановка задачи целочисленного программирования</a><br>
		&emsp;&emsp;<a href="#t1.1.1">1.1.1 Задача с постоянными элементами затрат</a><br>
		&emsp;&emsp;<a href="#t1.1.2">1.1.2 Задача планирования производственной линии</a><br>
		&emsp;&emsp;<a href="#t1.1.3">1.1.3 Задача с дихотомией</a><br>
		&emsp;&emsp;<a href="#t1.1.4">1.1.4 Постановка задачи линейного целочисленного программирования и ее связь с задачами линейного программирования</a><br>
		&emsp;&emsp;<a href="#t1.1.5">1.1.5 Пример</a><br>
		&emsp;&emsp;<a href="#t2">1.2. Метод ветвей и границ</a><br>
		&emsp;&emsp;<a href="#t1.2.1">1.2.1. Общая схема метода</a><br>
		&emsp;&emsp;<a href="#t1.2.2">1.2.2. Алгоритм</a><br>
		&emsp;&emsp;<a href="#t1.2.3">1.2.3. Пример</a><br>
		&emsp;&emsp;<a href="#t1.2.4">1.2.4. Двойственный симплекс-метод для задачи линейного программирования с двусторонними ограничениями</a><br>
		&emsp;<a href="#t3">1.3. Метод Гомори (метод отсечений) для полностью целочисленных задач</a><br>
		&emsp;&emsp;<a href="#t1.3.1">1.3.1. Интуитивное обоснование метода</a><br>
		&emsp;&emsp;<a href="#t1.3.2">1.3.2. Построение отсекающей плоскости</a><br>
		&emsp;&emsp;<a href="#t1.3.3">1.3.3. Алгоритм Гомори (общая схема)</a><br>
		&emsp;&emsp;<a href="#t1.3.4">1.3.4. Пример</a><br>

<style>
        img {
            vertical-align: middle;

 }


    </style>





		<br>
		<div align="justify" style="font-size: 14pt">
<p>&emsp;Целочисленное линейное программирование (ЦЛП) ориентировано на решение задач линейного программирования (ЛП), в которых на все или часть переменных наложены условия целочисленности. Различают полностью целочисленные задачи и частично целочисленные задачи.<br>
		&emsp;К необходимости рассматривать целочисленные задачи мы приходим по двум причинам:</p>
существует много практических задач, которые изначально по своей природе являются целочисленными;
существуют задачи, которые явно не содержат требований целочисленности, но содержат условия, 
которые трудно или невозможно (в исходной постановке) записать в виде формул (т.е. математически формализовать). Это так называемые «некорректные» задачи. 
Анализ таких задач, введение новых целочисленных переменных позволяют преодолеть эту трудность и свести задачу к стандартному виду.
		<p>&emsp;Рассмотрим ряд примеров задач второго типа.</p>
	
	<br>
	<p class="title"><a name="t1"><b>1.1 Примеры прикладных задач, содержащих условия
целочисленности. Постановка задачи целочисленного программирования</b></a></p>


<!%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%>

	<p class="title"><a name="t1.1.1"><b>1.1.1 Задача с постоянными элементами затрат</b></a></p>


<br>

 Во многих типах задач планирования производства рассматривается следующая ситуация. Предприятие производит <i>N</i>  видов продукции. Затраты на производство продукции
<div* lang="latex">j</div*>
-го вида складываются из постоянных затрат в объеме
<div* lang="latex">K_{j}</div*>, не зависящем от количества произведенной продукции, и текущих издержек на производство единицы продукции.

<br>
  &emsp;
Таким образом, если
<div* lang="latex"> x_j </div*> -- объем выпуска продукции <div* lang="latex">j</div*>-го вида, то функцию суммарных затрат можно представить в виде
<br>
<br>
<div lang="latex" align="center" > C_{j} \left(x_{j} \right)=\left\{\begin{array}{c} {K_{j} +c_{j} x_{j} },\quad \mbox{ if  } x_{j} \; >0; \\
 0 \, \; \; \mbox{if  }\; x_{j} =0. \end{array}\right. </div>
<br>
Естественно стремление минимизировать общие затраты по всем типам продукции:
    <br>
  <table width="100%" border="0">
    <tr>
      <td width="98%"><img id="(1)">
<div lang="latex" align="center">Z=\sum _{j={1}}^{N}C_{j} (x_{j} ) \to \, \, \min .</div>
 </td>
      <td width="2%">(1)</td>
    </tr>
  </table>

<br>
  &emsp;Критерий <a href="#(1)">(1)</a> не является линейным вследствие разрыва в начале координат. Поэтому он практически не пригоден для дальнейшего исследования.

Введем новые булевы переменные, которые позволят нам записать критерий <a href="#(1)">(1)</a> в лучшем (с аналитической точки зрения) виде.

<br>
  &emsp;Пусть
    <br>
  <table width="100%" border="0">
    <tr>
      <td width="98%"><img id="(2)">
<div lang="latex" align="center">
y_{j} =\left\{\begin{array}{c} {0,\; \mbox{ if  } x_{j} =0{\rm ,}} \\
 {1,\; \mbox{ if  } x_{j} >0.} \end{array}\right.
</div>
 </td>
      <td width="2%">(2)</td>
    </tr>
  </table>

Последнее условие можно переписать в виде
<br>
    <br>
  <table width="100%" border="0">
    <tr>
      <td width="98%"><img id="(3)">
<div lang="latex" align="center">
x_{j} \le My_{j} ,
</div>
 </td>
      <td width="2%">(3)</td>
    </tr>
  </table>
<br>

где
 <div* lang="latex">M</div*>
   -- достаточно большое число. Оно должно быть таким, чтобы
<div* lang="latex">x_{j} \le M</div*>

при любом допустимом значении
<div* lang="latex">x_{j}.</div*>
Строго говоря, пока условие <a href="#(3)">(3)</a> не эквивалентно условию <a href="#(2)">(2)</a>!

<br>
  &emsp;Теперь рассмотрим критерий

<br>
    <br>
  <table width="100%" border="0">
    <tr>
      <td width="98%"><img id="(4)">
<div lang="latex" align="center">
Z=\sum _{j=1}^{N}\left(c_{j} x_{j} +K_{j} y_{j} \right) \to \min
</div>
 </td>
      <td width="2%">(4)</td>
    </tr>
  </table>
<br>
при дополнительных ограничениях

<br>
    <br>
  <table width="100%" border="0">
    <tr>
      <td width="98%"><img id="(5)">
<div lang="latex" align="center">
0\le x_{j} \le My_{j} ,\quad y_{j} =0\vee 1,\quad j=\overline{1,N}.
</div>
 </td>
      <td width="2%">(5)</td>
    </tr>
  </table>
<br> 
Покажем, что <a href="#(4)">(4)</a>, <a href="#(5)">(5)</a> эквивалентны <a href="#(1)">(1)</a>. Действительно, при
 <div* lang="latex">x_{j} >0</div*>
 имеем

<br>
 <div* lang="latex">y_{j} =1</div*>
 и
<br>


<div lang="latex" align="center">c_{j} x_{j} +K_{j} y_{j} =c_{j} x_{j} +K_{j} .</div>

<br>
  &emsp;Пусть
 <div* lang="latex">x_{j} =0.</div*>
  Из <a href="#(5)">(5)</a> следует, что
  <div* lang="latex">y_j</div*>
   может быть равным 0 или 1. Однако, согласно <a href="#(4)">(4)</a>, наша цель -- минимизировать критерий <a href="#(4)">(4)</a>, следовательно, 
	с учетом <a href="#(4)">(4)</a> мы обязательно должны выбрать
   <div* lang="latex">y_{j} =0</div*>.

<br>
  &emsp;С аналитической точки зрения, функция <a href="#(4)">(4)</a> является хорошей, так как она является линейной и непрерывной.

<br>
  &emsp;Следует подчеркнуть, что исходная задача с постоянными элементами затрат не имела никакого отношения к целочисленному программированию.
 Однако преобразованная задача является частично целочисленной с булевыми переменными. Необходимость такого преобразования была вызвана чисто аналитическими причинами.
  <br>
  <br>
  


<!%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%>
  <p class="title"><a name="t1.1.2"><b>1.1.2 Задача планирования производственной линии</b></a></p>


  
<br>
&emsp;Предположим, что имеется один станок, на котором надо произвести
  <em>n</em> различных операций. На порядок выполнения некоторых операций наложены
  ограничения технологического характера и, кроме того, есть ограничения, согласно
  которым каждая операция должна быть выполнена к заданному сроку. Таким образом,
  в задаче имеются ограничения трех типов: 

  <ol style="font-size: 14pt;">
    <li> ограничения на последовательность выполнения операций,<br>
       </li>
    <li> условие, что все операции выполняются на одном станке,
      т.е. операции нельзя распараллелить,<br>
       </li>
    <li> наличие временных сроков на осуществление операций </li>
  </ol>



Рассмотрим первый тип ограничений. Пусть

<div* lang="latex">x_j</div*>
  -- момент начала выполнения
 <i>j</i>-й операции,

 <div* lang="latex">a_j</div*> -- время, требуемое на выполнение
 <div* lang="latex">j</div*>-й операции. Если операция
  <div* lang="latex">i</div*>
  должна предшествовать операции
   <div* lang="latex">j</div*>
   и операция
    <div* lang="latex">j</div*>
  должна начаться не ранее, чем через
  <div* lang="latex">c_{ij} ,</div*>
  где
  <div* lang="latex">c_{ij} >a_{i} </div*>,
   после начала выполнения операции
   <div* lang="latex">i</div*>, то должно выполняться неравенство


<br>
    <br>
  <table width="100%" border="0">
    <tr>
      <td width="98%"><img id="(6)">
<div lang="latex" align="center">
x_{i} +c_{ij} \le x_{j} ,\, \, \,  (i,j)\in U_{*} .
</div>
 </td>
      <td width="2%">(6)</td>
    </tr>
  </table>


Пусть
<div* lang="latex">i</div*> и
<div* lang="latex">j</div*>
 --- две операции, для которых нет ограничений на последовательность их выполнения (т.е.
<div* lang="latex">(i,j)\not \in U_*</div*>).

Рассмотрим ограничение второго типа.  Пусть
<div* lang="latex">i</div*>
 и
 <div* lang="latex">j</div*> --- две операции, для которых нет ограничений на последовательность их выполнения (т.е.
<div* lang="latex">(i,j)\not \in U_*</div*>.

Поскольку  операции
<div* lang="latex">i</div*>
 и
 <div* lang="latex">j</div*>, не могут  выполняться  на станке одновременно, то  для
  <div* lang="latex">(i,j)\notin U_{*} ,</div*>
  должно выполняться одно из соотношений:
<br>
<br>

<div  align="center"><div* lang="latex">x_{i} -x_{j} \ge a_{j} </div*>, если в оптимальном решении
<div* lang="latex">j</div*> предшествует <div* lang="latex">i</div*>,</div>
<br><br>
 или
<br>
<br>
<div align="center"><div* lang="latex">x_{j} -x_{i} \ge a_{i} </div*>, если в оптимальном решении <div* lang="latex">i</div*> предшествует <div* lang="latex">j</div*>.</div>

<br>
<br>

Логическое ограничение вида «или--или» не укладывается в рамки обычной задачи ЛП, что вызывает существенные трудности при построении математической модели задачи. Эти трудности можно обойти путем введения вспомогательных булевых переменных
<br>
>br>
<br>





 <table width="100%" border="0">
  <tr>
      <td width="98%"> 
        <div align="center"><img src="../../images/lk1/img1_1/10.gif" width="390" border="0" align="absmiddle" alt=""></div>
    </td>
      <td width="2%">&nbsp;</td>
  </tr>
</table>

<br>
<br>
<br>

Пусть
<div* lang="latex">M>0</div*>
 достаточно велико, тогда ограничение вида «или--или» эквивалентно следующей системе неравенств для
 <div* lang="latex">(i,j)\notin U_{*}</div*>:



<br>
    <br>
  <table width="100%" border="0">
    <tr>
      <td width="98%"><img id="(7)">
<div lang="latex" align="center">
My_{ij} +(x_{i} -x_{j} )\ge a_{j} ,
</div>
 </td>
      <td width="2%">(7)</td>
    </tr>
  </table>



<br>
    <br>
  <table width="100%" border="0">
    <tr>
      <td width="98%"><img id="(8)">
<div lang="latex" align="center">
M(1-y_{ij} )+(x_{j} -x_{i} )\ge a_{i} ,\, \, \, y_{ij} =0\vee 1.
</div>
 </td>
      <td width="2%">(8)</td>
    </tr>
  </table>

<br>
<br>

Действительно, если на оптимальном решении
<div* lang="latex">y_{ij} =0</div*>,
то ограничение <a href="#(8)">(8)</a> становится избыточным, а ограничение <a href="#(7)">(7)</a> -- активным:
<br>
<br>
<div lang="latex" align="center">(x_{i} -x_{j} )\ge a_{j} ,\quad M+(x_{j} -x_{i} )\ge a_{i} .</div>
<br>


Если на оптимальном решении
<div* lang="latex">y_{ij} =1</div*>, то ограничение <a href="#(7)">(7)</a> -- избыточное, а ограничение <a href="#(8)">(8)</a> -- активное:
<br>
<br>
<div lang="latex" align="center">\quad M+(x_{i} -x_{j} )\ge a_{j} ,{\rm \; \; \; \; \; (}x_{j} -x_{i} )\ge a_{i} .</div>

<br>

Таким образом, введение булевых переменных позволило избежать логического «или--или» с помощью <b>линейных</b> неравенств.

Ограничения третьего типа учитываются следующим образом. Пусть операция
<div* lang="latex">j</div*>
 должна быть завершена к моменту времени
 <div* lang="latex">d_j</div*>,
  тогда
<br>
    <br>
  <table width="100%" border="0">
    <tr>
      <td width="98%"><img id="(9)">
<div lang="latex" align="center">
x_{j} +a_{j} \le d_{j} ,\, \, \, \, \, \, j\in J=\{ 1,2,...,n\} .
</div>
 </td>
      <td width="2%">(9)</td>
    </tr>
  </table>
<br>

Если обозначить через
<div* lang="latex">t</div*>
суммарное время, требуемое для выполнения всех
<div* lang="latex">n</div*>  операций, то рассматриваемая задача принимает вид
<br>
<br>

<div lang="latex" align="center">Z=t\, \to \, \, \min </div>

при ограничениях <a href="#(6)">(6)</a> -- <a href="#(9)">(9)</a> и
<br>
<br>
<div lang="latex" align="center">x_{j} +a_{j} \le t,\quad j=\overline{1,n}; y_{\, ij} =0\vee 1, \; 
i=\overline{1,n}\, ;j=\overline{1,n},\, \, \, \, (i,j)\notin U_{*} .</div>
<br>

<!%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%>

<br>
    <p class="title"><a name="t1.1.3"><b>1.1.3 Задачи с дихотомией</b></a></p>
<br>
  &emsp;Предположим, что в некоторой ситуации требуется выполнение
    <em>k</em> ограничений из общего числа <em>m</em> ограничений. При этом заранее
    не известно, какие именно ограничения должны выполняться. Запишем ограничения
    в виде

<br>
  <div lang="latex" align="center">g_{i} \left(x_{1} ,...,x_{n} \right)\le b_{i} ,\quad i=1,2,...,m.</div>

Определим новую переменную

<br>
<br>


<table width="100%" border="0">
  <tr>
      <td width="98%"> 
        <div align="center"><img src="../../images/lk1/img1_1/17.gif" width="463" border="0" align="absmiddle" alt=""></div>
    </td>
      <td width="2%">&nbsp;</td>
  </tr>
</table>


Если
<div* lang="latex">M>0</div*>
 достаточно велико, то выполнение по крайней мере
 <div* lang="latex">k</div*>
 ограничений из
 <div* lang="latex">m</div*>
  обеспечивается соблюдением соотношений:

<div lang="latex" align="center">g_{i} \left(x_{1} ,...,x_{n} \right)\le b_{i} +My_{i} ,{\rm \; \; \; }y_{i} =0\vee 1,\quad i=\overline{1,m},</div>
<br>
<div lang="latex" align="center">\sum _{i=1}^{m}y_{i}  =m-k.</div>


Аналогичная ситуация возникает, когда правая часть некоторого ограничения может принимать <b>одно</b>  из нескольких значений:

<div lang="latex" align="center">g\left(x_{1} ,x_{2} ,...,x_{n} \right)\le b,\quad b\in \left\{b_{1} ,b_{2} ,...,b_{k} \right\}.</div>

Данное ограничение можно записать в виде

<div lang="latex" align="center">g\left(x_{1} ,...,x_{n} \right)\le \sum _{s=1}^{k}b_{s} y_{s}  ,{\rm \; \; \; }\sum _{s=1}^{k}y_{s}  
=1,\; \; \; y_{s} =0\vee 1,\quad s=\overline{1,k},</div>

где

<div lang="latex" align="center">
y_{s} =
\left\{\begin{array}{c} 
1,\, \, \mbox{ if } b=b_{s} , \\
0\, \, \mbox{ otherwise } \end{array}\right. </div>

Есть еще много типов задач, которые по постановке не относятся к целочисленным, 
но построение оптимального решения в этих задачах требует перехода к моделям целочисленного программирования: 
задача коммивояжера, задача составления расписания обработки деталей на станках, задача баланса сборочной линии и др. 
Некоторые из этих задач мы еще будем рассматривать далее подробно. Построение моделей целочисленного программирования 
для таких ситуаций в некоторой степени является искусством.



<!%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%>


  <p class="title"><a name="t1.1.4"><b>1.1.4 Постановка задачи линейного целочисленного
    программирования и ее связь с задачами линейного программирования</b></a></p>
  <br>&emsp;В общей постановке задача ЦЛП имеет вид: <br>





<br>
    <br>
  <table width="100%" border="0">
    <tr>
      <td width="98%"><img id="(10)">
<div lang="latex" align="center">
c'x\to {\rm max},</div>
 </td>
      <td width="2%">(10)</td>
    </tr>
  </table>



<br>
    <br>
  <table width="100%" border="0">
    <tr>
      <td width="98%"><img id="(11)">
<div lang="latex" align="center">
Ax=b, d_{*j} \le x_{j} \le d_{j}^{*} ,\; j\in J,</div>
 </td>
      <td width="2%">(11)</td>
    </tr>
  </table>







<br>
    <br>
  <table width="100%" border="0">
    <tr>
      <td width="98%"><img id="(12)">
      <div  align="center">
<div* lang="latex"> x_j</div*>  -- целое, <div* lang="latex">j\in I</div*>,
</div>
 </td>
      <td width="2%">(12)</td>
    </tr>
  </table>
<br>
    <br>

 здесь
<div* lang="latex">x=(x_{j} ,j\in J),\; J=\{ \, 1,2,...,n\, \} ,\; I\subset J;\; A\in R^{m\times n},\; </div*>

<div* lang="latex">{\rm rank\; A}=m,\; b\in R^{m} ,\; c\in R^{n} .</div*>

<br>
&emsp;Встает вопрос: что сложнее -- задача ЦЛП <a href="#(10)">(10)</a> -- <a href="#(12)">(12)</a> или задача ЛП <a href="#(10)">(10)</a> -- <a href="#(11)">(11)</a>?


<br>&emsp;Многие ответят, что задача ЦЛП проще, так как в этой задаче меньше допустимых планов, например, если
 <div* lang="latex"> -\infty &lt; d_{*} \leq d^{*} &lt; \infty, </div*>
 то количество допустимых планов конечно.

<br>&emsp;
Однако справедливо обратное. Проиллюстрируем это на примере.


<br>
<br>
&emsp;
<b>Пример.</b> Рассмотрим задачу


<br>
    <br>
  <table width="100%" border="0">
    <tr>
      <td width="98%"><img id="(13)">
<div lang="latex" align="center">
21x_{1} +11x_{2} \to \max ,
</div>
<br>
 </td>
      <td width="2%">(13)</td>
    </tr>
  </table>



<br>
    <br>
  <table width="100%" border="0">
    <tr>
      <td width="98%"><img id="(14)">
<div lang="latex" align="center">
7x_{1} +4x_{2} \le 13,\quad x_{1} \ge 0,\; x_{2} \ge 0,
</div>
 </td>
      <td width="2%">(14)</td>
    </tr>
  </table>




<br>
    <br>
  <table width="100%" border="0">
    <tr>
      <td width="98%"><img id="(15)">
      <div  align="center">
<div* lang="latex">x_2,\; x_2</div*> -- целые.
</div>
 </td>
      <td width="2%">(15)</td>
    </tr>
  </table>










<br>
&emsp; Эта задача имеет единственный оптимальный план
<div* lang="latex">x^{0} =(x_{1} =0,\; x_{2} =3) </div*>
(см. рис.~1.1).

<br><center><img id="pic1_1" src="../../images/lk1/img1_1/24.gif" width="200" border="0" align="absmiddle" alt=""><br><span>Рис. 1.1</span></center>
<br>


&emsp;Существует такое мнение, что задачи ЦЛП можно решать следующим образом: надо решить задачу без предположения целочисленности, 
а потом «округлить» полученное нецелочисленное решение до целочисленного.

<br>
&emsp;Посмотрим, что мы получим, если воспользуемся этим приемом в нашей задаче. Оптимальное решение нецелочисленной задачи
 <a href="#(13)">(13)</a>, <a href="#(14)">(14)</a> имеет вид
<div* lang="latex">x^{*} =(x_{1} =\frac{13}{7} ,\; x_{2} =0).</div*>
 
<br> 
&emsp;Очевидное округление приводит к вектору
 <div* lang="latex">(x_1 = 2, x_2= 0)</div*>,
  который не является даже планом.

<br>&emsp;Округление в «меньшую сторону» приводит к плану
<div* lang="latex">(x_{1} =1,\; x_{2} =0).</div*>

 <br>&emsp;Этот план допустимый, но очень далек от оптимального.

<br>
<br>&emsp;
Таким образом, мы видим, что «метод округления» нельзя считать универсальным.

<br>&emsp;Еще более неприятная особенность, свойственная задачам целочисленного программирования, состоит в том, что нет простого способа, позволяющего определить,
 является ли данный допустимый план оптимальным. В этом одно из главных отличий задач 
ЦЛП от задач ЛП. Чтобы проиллюстрировать это, предположим, что в задаче <a href="#(13)">(13)</a> -- <a href="#(15)">(15)</a> надо проверить, является ли план

<div* lang="latex">(x_{1} =1,\; x_{2} =1)</div*>
 оптимальным. 

<br>&emsp;По аналогии с ЛП приходит мысль, что для этого надо проверить, соответствует ли точка

 <div* lang="latex">(x_{1} =1,\; x_{2} =1)</div*>

  какому-либо локальному оптимуму, в том смысле, что значение целевой функции не улучшится при переходе в любую соседнюю допустимую целочисленную точку:

<div lang="latex" align="center">x_{1} =1+d,\; x_{2} =1+l,\quad {\rm 345\; \; \; }d,{\rm \; \; }l=-1\vee 0\vee 1.</div>

<br>&emsp;В нашем примере допустимые соседние точки имеют вид


<br>
    <br>
  <table width="100%" border="0">
    <tr>
      <td width="98%"><img id="(16)">
<div lang="latex" align="center">
(x_{1} =0,x_{2} =0), (x_{1} =0,\; x_{2} =1), (x_{1} =0,\; x_{2} =2), (x_{1} =1,\; x_{2} =0).
</div>
 </td>
      <td width="2%">(16)</td>
    </tr>
  </table>

<br>&emsp;Легко проверить, что значение критерия качества в точке
 <div* lang="latex">(x_{1} =1,x_{2} =1)</div*>
 лучше, чем в точках 


<a href="#(16)">(16)</a>. Однако вектор
 <div* lang="latex">(x_{1} =1,x_{2} =1)</div*>

 не является оптимальным планом!

<br>&emsp;Отметим, что для задач с булевыми переменными
 <div* lang="latex">x_{j} =0\vee 1</div*>
 проверка всех соседних дискретных точек сводится к полному перебору всех возможных планов. Возникает вопрос: существуют ли методы решения задач ЦЛП,
 отличные от полного перебора, либо полный перебор -- это единственный способ решения?

<br>&emsp;Если задача имеет небольшую размерность, то метод полного перебора можно использовать. 
Однако, если размеры большие, то полный перебор по времени выливается приблизительно «в целую жизнь». Например, при рассмотрении задачи ЦЛП, в которой 100 переменных и
<div* lang="latex">x_{j} =0\vee 1</div*>,
для полного перебора надо перебрать
<div* lang="latex">2^{100}</div*> вариантов. Следовательно, нужны другие методы, отличные от полного перебора.

 
  <br>&emsp;К настоящему времени наиболее
  популярными методами целочисленного программирования являются методы двух типов:
  
  <ol style="font-size: 14pt;">
    <li> методы возврата </li>
    <li> методы отсекающих плоскостей </li>
  </ol>
 <br>&emsp;Ниже рассматриваются метод ветвей и границ, относящийся к первой
  группе, и метод Гомори, относящийся ко второй группе методов. <br>
	<br> 
    <p class="title"><a name="t2"><b>1.2 Метод ветвей и границ</b></a></p>


<!%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%>

	<p class="title"><a name="t1.2.1"><b>1.2.1. Общая схема метода</b></a></p>

	<br> &emsp;Этот метод применим как к полностью целочисленным задачам, так
  и частично целочисленным задачам. Рассмотрим задачу <br>
  <br>

  Рассмотрим задачу



 <br>
    <br>
  <table width="100%" border="0">
    <tr>
      <td width="98%"><img id="(17)">
<div lang="latex" align="center">
c'x\to \max ,
</div>
 </td>
      <td width="2%">(17)</td>
    </tr>
  </table>



 <br>
    <br>
  <table width="100%" border="0">
    <tr>
      <td width="98%"><img id="(18)">
<div lang="latex" align="center">
Ax\le b,
</div>
 </td>
      <td width="2%">(18)</td>
    </tr>
  </table>



 <br>
    <br>
  <table width="100%" border="0">
    <tr>
      <td width="98%"><img id="(19)">
<div lang="latex" align="center">
d_{*j} \le x_{j} \le d_{j}^{*} ,\; j\in J,
</div>
 </td>
      <td width="2%">(19)</td>
    </tr>
  </table>








 <br>
    <br>
  <table width="100%" border="0">
    <tr>
      <td width="98%"><img id="(20)">
      <div  align="center">
<div* lang="latex">x_j</div*> -- целое, <div* lang="latex">j\in I</div*>, 
</div>
 </td>
      <td width="2%">(20)</td>
    </tr>
  </table>







<div lang="latex" align="center">x=(x_{j} ,j\in J),\; J=\{ 1,2,...,n\} ,\; I\subset J.</div>

<br> &emsp;Заметим, что без ограничения общности для
<div* lang="latex">j\in I</div*>
числа
<div* lang="latex">d_{*j},\; d_{j}^{*} </div*>
можно считать целыми.

<br> &emsp;Идея метода ветвей и границ основана на следующем элементарном факторе. Рассмотрим любую переменную
<div* lang="latex">x_{j} ,\; j\in I</div*>.

<br> &emsp;Пусть
<div* lang="latex">l</div*>
-- некоторое целое число, такое что

<div lang="latex" align="center">d_{*j} \le l\le d_{j}^{*} -1.</div>

<br> &emsp;Тогда оптимальное значение
<div* lang="latex">x_{j}^{0} </div*>
 будет удовлетворять либо неравенству

<div lang="latex" align="center">l+1\le x_{j} \le d_{j}^{*} ,</div>
либо неравенству

<div lang="latex" align="center">d_{*j} \le x_{j} \le l.</div>

<br> &emsp;Для иллюстрации возможности использования этого факта предположим, что в задаче <a href="#(17)">(17)</a> -- <a href="#(19)">(19)</a> 
условие целочисленности не учитывается. Пусть в результате решения непрерывной задачи мы получим оптимальный план, у которого
<div* lang="latex">x_{1} =1\frac{1}{3} </div*>.
 <br> &emsp;Далее рассмотрим две задачи:

<br>
задачу


<br>
    <br>
  <table width="100%" border="0">
    <tr>
      <td width="98%"><img id="(21)">
<div lang="latex" align="center">
c'x\to \max ,
</div>
 </td>
      <td width="2%">(21)</td>
    </tr>
  </table>



<br>
    <br>
  <table width="100%" border="0">
    <tr>
      <td width="98%"><img id="(22)">
<div lang="latex" align="center">
Ax\le b, d_{*j} \le x_{j} \le d_{j}^{*} ,\; j\in J\backslash 1,
</div>
 </td>
      <td width="2%">(22)</td>
    </tr>
  </table>



<br>
    <br>
  <table width="100%" border="0">
    <tr>
      <td width="98%"><img id="(23)">
<div lang="latex" align="center">
d_{*1} \le x_{1} \le 1,
</div>
 </td>
      <td width="2%">(23)</td>
    </tr>
  </table>

и задачу <a href="#(21)">(21)</a>, <a href="#(22)">(22)</a> с условием


<br>
    <br>
  <table width="100%" border="0">
    <tr>
      <td width="98%"><img id="(24)">
<div lang="latex" align="center">
2\le x_{1} \le d_{1}^{*} .
</div>
 </td>
      <td width="2%">(24)</td>
    </tr>
  </table>
<br>

<br> &emsp; Предположим теперь, что каждая из полученных задач имеет оптимальные целочисленные решения соответственно
 <div* lang="latex">x^{01}</div*>
  и
  <div* lang="latex">x^{02}</div*>. Тогда очевидно, что решением исходной задачи <a href="#(17)">(17)</a> -- <a href="#(20)">(20)</a> является тот из векторов
   <div* lang="latex">x^{01}</div*> или
   <div* lang="latex">x^{02}</div*>, на котором значение
   <div* lang="latex">c'x</div*>  больше.




<!%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%>

  <p class="title"><a name="t1.2.2"><b>1.2.2 Алгоритм</b></a></p>




  Рассмотрим общую итерацию метода. Пусть мы осуществляем <i>t</i>-ю итерацию.

<br> &emsp;В начале
 <div* lang="latex">t</div*>
 -й итерации имеем:
<br>
<br>


 &emsp;1) число
<div* lang="latex">r_{0}^{t} </div*>,
 которое является оценкой снизу значения целевой функции исходной задачи на оптимальном плане;

<br>
<br> &emsp;
2) список задач ЛП, которые подлежат решению. Эти задачи отличаются от <a href="#(17)">(17)</a>-- <a href="#(19)">(19)</a> и друг от друга только условиями 
<a href="#(19)">(19)</a>;
<br>
<br> &emsp;
\noindent 3) <i>n</i>-вектор
<div* lang="latex">\mu</div*>,
число
<div* lang="latex">\mu_0</div*>.


<br>
<br>
<br> &emsp;<b> Замечание.</b>  На первой итерации, т.е. при
<div* lang="latex">t=1</div*>,

список задач ЛП состоит только из одной задачи <a href="#(17)">(17)</a> -- <a href="#(19)">(19)</a>. Для определения

<div* lang="latex">r_{0}^{1} , \; \mu ,\; \mu _{0} </div*>

можно поступить следующим образом. 



<br> &emsp;Если известен какой-либо <i>целочисленный</i>  план

<div* lang="latex">\bar{x}</div*>

задачи <a href="#(17)">(17)</a> -- <a href="#(20)">(20)</a>, то полагаем

<div* lang="latex">r_{0}^{1} =c'\bar{x}</div*>,

<div* lang="latex">\mu =\overline{x},\, \, \mu _{0} =1.</div*>

Если такого плана нет,  то полагаем


 <div* lang="latex">\mu _{0} =0</div*>, в качестве

 <div* lang="latex">\mu </div*>

  берем  любой <i>n</i>-вектор,  а  для  построения  оценки
	
 <div* lang="latex">r_{0}^{1} </div*>,
 удовлетворяющей неравенству
 <div* lang="latex">r_{0}^{1} \le c'x^{0} </div*>, где
 <div* lang="latex">x^0</div*>

 -- решение задачи <a href="#(17)">(17)</a> -- <a href="#(20)">(20)</a>, можно привлечь любую дополнительную информацию. Например, если
 <div* lang="latex">c\ge 0</div*>
 и
 <div* lang="latex">d_{*} \ge 0</div*>,
  то очевидно, что
<div* lang="latex"> c'x^{0} \ge 0,\]
следовательно, можно положить
<div* lang="latex">r_{0}^{1} =0</div*>.
 В самом худшем случае, когда нет никакой дополнительной информации, мы полагаем
<div* lang="latex">r_{0}^{1} =-\infty </div*>.
<br>
<br> &emsp; На произвольной итерации <i>t</i> выполняем следующие шаги.

<br> &emsp;
<b> Шаг 1.</b> Если основной список пуст, идем на шаг 5. В противном случае выбираем любую задачу ЛП из списка и идем на шаг 2.

<br> &emsp;<b> Шаг 2.</b> Решаем выбранную задачу ЛП. Если эта задача не имеет решения либо она имеет решение
<div* lang="latex">x^{*} </div*>,
 для которого
<div lang="latex" align="center">c'x^{*} \le r_{0}^{t} ,</div>

то полагаем
 <div* lang="latex">r_{0}^{t+1} =r_{0}^{t} </div*>,
 вычеркиваем данную задачу ЛП из списка и возвращаемся к началу новой <i>(t+1)</i> -й итерации (идем на шаг 1, заменив <i>t</i> на <i>{t} + 1</i>).

<br> &emsp; Если выбранная задача ЛП имеет решение
<div* lang="latex">x^{*} </div*> и

<div lang="latex" align="center">c'x^{*} >r_{0}^{t} ,</div>
то идем на шаг 3.

<br><br> &emsp;
<b>Шаг 3.</b>  Если на решении
<div* lang="latex">x^{*} </div*>
задачи ЛП выполняется условие целочисленности <a href="#(20)">(20)</a>, то фиксируем это решение, т.е. полагаем
<div* lang="latex">\mu =x^{*} ,\; \mu _{0} =1</div*>.
Изменяем оценку
<div lang="latex" align="center">r_{0}^{t+1} =c'x^{*} ,</div>

вычеркиваем рассмотренную задачу ЛП из списка и переходим к новой <i>(t + 1)</i>-й итерации (идем на шаг 1, заменив <i>t</i>  на <i>t+1</i>).

<br> &emsp; Если на решении
<div* lang="latex">x^{*} </div*>
задачи ЛП условие целочисленности <a href="#(20)">(20)</a> не выполняется, то идем на шаг 4.

<br> &emsp;<b>Шаг 4.</b>
Выберем любую переменную
<div* lang="latex">x_{j_{0} }^{*} ,\; j_{0} \in I</div*>,
 которая не удовлетворяет условию целочисленности. Пусть
 <div* lang="latex">x_{j_{0} }^{*} =l_{j_{0} } </div*>,
 <div* lang="latex">l_{j_{0} } </div*>
 -- нецелое число. Обозначим через
 <div* lang="latex">[l_{j_{0} }] </div*>
  целую часть числа
 <div* lang="latex">l_{j_{0} } </div*>, т.е.
  <div* lang="latex">[l_{j_{0} }] </div*>
  -- это наибольшее целое, удовлетворяющее неравенству
<div lang="latex" align="center">[l_{j_{0} } ]\le l_{j_{0} } .</div>

<br> &emsp;
Например,
[3] = 3, [3, 5] = 3, [--3, 5] = --4.

<br> &emsp; Удалим старую рассматриваемую задачу ЛП из списка, а вместо нее добавим две новые задачи ЛП. Эти задачи отличаются от задачи ЛП, выбранной на шаге 1, и друг от друга только прямыми ограничениями на переменную
 <div* lang="latex">x_{j_{0} } </div*>.

<br> &emsp; В первой новой задаче ЛП эти ограничения имеют вид

<br>
<br>

<div lang="latex" align="center">
\bar{d}_{*j_{0} }\le x_{j_{0} } \le [l_{j_{0} } ],</div>

<br>
<br>

во второй задаче эти ограничения имеют вид
<br>
<br>
<div lang="latex" align="center">[l_{j_{0} } ]+1\le x_{j_{0} } \le \bar{d}_{j_{0} }^{{\rm *}\; } .</div>
<br>

Здесь
<div* lang="latex">\bar{d}_{*j_{0} } ,\bar{d}_{j_{0} }^{*} </div*>
-- нижняя и верхняя границы на переменную
<div* lang="latex">x_{j_{0} } </div*>,
 которые были в задаче ЛП, выбранной на шаге 1.

<br> &emsp; Полагаем
<div* lang="latex">r_{0}^{t+1} =r_{0}^{t} </div*>,
 переходим к новой <i>(t+1)</i>-й итерации (идем на шаг 1, заменив
<i>t</i>  на
 <i>t+1</i>)).
<br>
<br> &emsp;
<b>Шаг 5.</b>   Останавливаем алгоритм. При
<div* lang="latex">\mu _{0} =1</div*>
 вектор
<div* lang="latex">\mu</div*>
принимаем за решение задачи <a href="#(17)">(17)</a> -- <a href="#(20)">(20)</a>.
При
<div* lang="latex">\mu _{0} =0</div*>
в задаче <a href="#(17)">(17)</a> -- <a href="#(20)">(20)</a> нет допустимых планов.
<br>

  <br>

<!ПРИМЕР %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%>

  &emsp;<strong><a name="t1.2.3">Пример. </a></strong>Рассмотрим следующую задачу ЦЛП
 <br>
    <br>
  <table width="100%" border="0">
    <tr>
      <td width="98%"><img id="(25)">
<div lang="latex" align="center">3x_1+3x_2+13x_3\to \max,</div>
   </td>
      <td width="2%">(25)</td>
    </tr>
  </table>



<br>
    <br>
  <table width="100%" border="0">
    <tr>
      <td width="98%"><img id="(26)">
<div lang="latex" align="center">
--3x_{1}  + 6x_{2}  + 7x_{3} \le  8,
</div>
 </td>
      <td width="2%">(26)</td>
    </tr>
  </table>




<br>
    <br>
  <table width="100%" border="0">
    <tr>
      <td width="98%"><img id="(27)">
<div lang="latex" align="center">
  6x_{1}  -- 3x_{2}  + 7x_{3} \le  8,
</div>
 </td>
      <td width="2%">(27)</td>
    </tr>
  </table>


<br>
    <br>
  <table width="100%" border="0">
    <tr>
      <td width="98%"><img id="(28)">
      <div  align="center">
 <div lang="latex" align="center">0\le  x_{j} \le  5, \; {j }= \overline{1,3}, </div>
</div>
 </td>
      <td width="2%">(28)</td>
    </tr>
  </table>
 
<br>
    <br>
  <table width="100%" border="0">
    <tr>
      <td width="98%"><img id="(29)">
      <div  align="center">
 <div* lang="latex">x_{j} </div*> -- целое,  <div* lang="latex">{\; j }= \overline{1,3}</div*>.  
</div>
 </td>
      <td width="2%">(29)</td>
    </tr>
  </table>

<br>





&emsp; Перед первой итерацией список задач состоит из одной задачи № 1, которая совпадает с задачей <a href="#(25)">(25)</a> - <a href="#(28)">(28)</a>.
<br>
&emsp; Так как
 <div* lang="latex">x_{j} \ge 0,</div*>
<div* lang="latex">j=\overline{1,3}</div*>,
то очевидно, что

<div lang="latex" align="center"> 3x_{1}  + 3x_{2}  + 13x_{3}  \ge  0</div>
при любом допустимом плане. Значит, в качестве оценки снизу целевой функции исходной задачи можем взять число
<div* lang="latex">r_{0}^{1} =0.</div*>

<br>
&emsp; Опишем алгоритм решения задачи <a href="#(25)">(25)</a>- <a href="#(28)">(28)</a> по итерациям.

<br>
<br>

<b>Итерация 1.</b> Список состоит из одной задачи, у которой оценка снизу равна
<div* lang="latex">r_{0}^{1} =0.</div*>
<br>
&emsp;
Решим задачу № 1 из списка задач. Эта задача имеет решение:

<br>
<br>
<div  align="center"> <div* lang="latex">x_{1}^{*} = x_{2}^{*}  = 2\frac{2}{3} ,  \;   x_{3}^{*} = 0,  \;   c'x^{*} = 16. </div*>  (задача № 1).</div>

<br>
&emsp; Решение задачи № 1 нецелочисленное,
 <div* lang="latex">c'x^{*}  = 16 > 0=r_{0}^{1} </div*>.
  Переходим к шагу 4.

<br>
&emsp; Выберем переменную
<div* lang="latex">x_{1} </div*>
для ветвления. Задачу № 1 вычеркнем из списка, вместо неё включаем две новые задачи № 2, № 3.

<br>
&emsp;&emsp;&emsp;&emsp;&emsp; <b>Задача № 2:</b> условия <a href="#(25)">(25)</a> -- <a href="#(27)">(27)</a> + прямые ограничения

<br>
&emsp;&emsp;&emsp;&emsp;&emsp; <div lang="latex" align="center">3 \le  x_{1}  \le  5,    0 \le  x_{2}  \le  5,    0 \le  x_{3}  \le  5.</div>



<br>
&emsp;&emsp;&emsp;&emsp;&emsp; <b>Задача № 3:</b> условия <a href="#(25)">(25)</a> -- <a href="#(27)">(27)</a> + прямые ограничения

<br>
&emsp;&emsp;&emsp;&emsp;&emsp; <div lang="latex" align="center">0 \le  x_{1}  \le  2,    0 \le  x_{2}  \le  5,    0 \le  x_{3}  \le  5.</div>





<br>
&emsp;Полагаем
<div* lang="latex">r_{0}^{2} =r_{0}^{1} =0</div*>
 и переходим к шагу 1, начиная новую итерацию.
<br>



<br>
&emsp;<b>Итерация 2. </b> Список состоит из задач № 2, 3.

<br>
&emsp; Из списка задач рассмотрим задачу № 2. Легко увидеть, что ограничения этой задачи несовместны. 
Значит, мы вычёркиваем эту задачу из списка, полагаем <div* lang="latex">r_{0}^{3}=r_{0}^{2} =0</div*>
и переходим к новой итерации.

<br>
&emsp;<b>Итерация 3.</b>  Теперь список состоит только из задачи № 3. Рассмотрим эту задачу. Она имеет решение
<br>
<br>
<div  align="center"><div* lang="latex">x_{1}^{*} =x_{2}^{*}  = 2,    \; x_{3}^{*} =\frac{2}{7} ,   \;  c'x^{*}  = 15\frac{5}{7} </div*>. (задача № 3).</div>
<br>

<br>
&emsp; Переменная <div* lang="latex">x_{3}^{*} </div*>  -- нецелая. Выбираем её для ветвления и идём на шаг 4.

Удаляем задачу № 3 из списка, вместо неё включаем новые две задачи №~4, № 5, порождённые задачей № 3.

<br>
&emsp;&emsp;&emsp;&emsp;&emsp; <b>Задача № 4:</b> условия <a href="#(25)">(25)</a> -- <a href="#(27)">(27)</a> + прямые ограничения

<div lang="latex" align="center">0 \le  x_{1}  \le  2,    0 \le  x_{2}  \le  5,    1 \le  x_{3}  \le  5.</div>
<br>
<br>
&emsp;&emsp;&emsp;&emsp;&emsp; 
<b>Задача № 5:</b>  условия <a href="#(25)">(25)</a> -- <a href="#(27)">(27)</a> + прямые ограничения

<div lang="latex" align="center">0 \le  x_{1}  \le  2,    0 \le  x_{2}  \le  5,    x_{3}  = 0.</div>
<br>


Полагаем
<div* lang="latex">r_{0}^{4} =r_{0}^{3} =0 </div*>
и переходим к следующей итерации.


<br>
<br>
&emsp;<b>Итерация 4.</b> Список состоит из задач № 4, № 5. Рассмотрим задачу № 4. Она имеет решение

<br>
<div  align="center"><div* lang="latex">x_{1}^{*} =x_{2}^{*} =\frac{1}{3},\; x_{3}^{*}  = 1,    \;\; c'x^{*}  = 15. </div*> (задача № 4).</div>

<br>
&emsp; Переходим к шагу 4, выбрав переменную
<div* lang="latex">x_{2} </div*>
для ветвления. Задачу № 4 вычёркиваем из списка, вместо неё включаем в список две новые задачи № 6, № 7, порождённые задачей № 4.

<br>
&emsp;&emsp;&emsp;&emsp;&emsp;<b>Задача № 6:</b> yсловия <a href="#(25)">(25)</a> -- <a href="#(27)">(27)</a> + прямые ограничения
<br>
<div lang="latex" align="center">0 \le  x_{1} \le  2,    1 \le  x_{2}  \le 5,    1 \le  x_{3}  \le  5.</div>
<br>
&emsp;&emsp;&emsp;&emsp;&emsp;
<b>Задача № 7:</b> условия <a href="#(25)">(25)</a> -- <a href="#(27)">(27)</a> + прямые ограничения
<br>
<div lang="latex" align="center">0 \le  x_{1}  \le  2,    x_{2}  = 0,    1 \le  x_{3}  \le  5.</div>

<br>
&emsp;
Полагаем
<div* lang="latex">r_{0}^{5} =r_{0}^{4} =0</div*>
 и переходим к новой итерации.

<br>
<br>
&emsp;<b>Итерация 5.</b> На данной итерации из списка задач № 5, № 6, № 7 выберем задачу № 6. Анализируя условия задачи № 6, легко заметить, что она не имеет допустимых планов, поэтому вычёркиваем её из списка. Полагаем
<div* lang="latex">r_{0}^{6} =r_{0}^{5} =0</div*>
и переходим к новой итерации, возвращаясь к шагу 1.

<br>
<br>
&emsp;<b>Итерация 6.</b> Теперь список состоит из задач № 5, № 7. Выберем задачу № 7. Она имеет решение

<br>
<br> 
<div  align="center"><div* lang="latex">x_{1}^{*} =x_{2}^{*}  = 0,    \; x_{3}^{*}  = 1\frac{1}{7},\; c'x^{*}  = 14\frac{6}{7} </div*>. (задача № 7).</div>

<br>
&emsp; Переходим к шагу 4, используя
<div* lang="latex">x_3</div*>
для ветвления. Задачу № 7 исключаем из списка, вместо неё включаем две новые задачи № 8, № 9, порождённые задачей № 7.

<br>
&emsp;&emsp;&emsp;&emsp;&emsp;<b>Задача № 8:</b> условия <a href="#(25)">(25)</a> -- <a href="#(27)">(27)</a> + прямые ограничения

<div lang="latex" align="center">0 \le  x_{1}  \le  2,    x_{2} = 0,   2\le x_{3} \le 5.</div>

<br>
&emsp;&emsp;&emsp;&emsp;&emsp;<b>Задача № 9: </b>условия <a href="#(25)">(25)</a> -- <a href="#(27)">(27)</a> + прямые ограничения

<div lang="latex" align="center">0\le x_{1} \le 2, x_{2} =0, x_{3} =1.</div>



<br>
&emsp;Полагаем
<div* lang="latex">r_{0}^{7} =r_{0}^{6} =0 </div*>
и переходим к следующей итерации.

<br>
<br>
&emsp;<b>Итерация 7.</b> Список состоит из задач № 5, 8, 9. Выберем задачу № 8. Она не имеет решения, так как её ограничения несовместны. Вычёркиваем её из списка. Полагаем
<div* lang="latex">r_{0}^{8} =r_{0}^{7} =0</div*>
 и переходим к новой итерации.

<br>
<br>
&emsp;<b>Итерация 8.</b> Список состоит из задач № 5, 9. Выберем задачу № 9. Эта задача имеет решение
<br>
<br>
 <div  align="center"><div* lang="latex">x_{1}^{*} =x_{2}^{*}  = 0, \; x_{3}^{*} =1, \;\; c'x^{*}  = 13. </div*>  (задача № 9).</div>
<br>

<br>
&emsp; Решение задачи № 9 -- целое, поэтому полагаем
<div* lang="latex">\mu _{0} =1, \; \mu =x^{*} </div*>.
 Задачу № 9 вычёркиваем из списка, полагаем
<div* lang="latex">r_{0}^{9} =r_{0}^{8} =13</div*>
и переходим к новой итерации.

<br>
<br>
&emsp;<b>Итерация 9.</b> Список состоит только из одной задачи № 5. Задача № 5 имеет решение

<br>
<br> <div  align="center"><div* lang="latex">x_{1}^{*}  =2, \; x_{2}^{*} =2^{\frac{1}{3} } , \; x_{3}^{*} =0, \; c'x^{*}  = 13.</div*>  (задача № 5).</div>

<br>
&emsp; Поскольку
<div* lang="latex">c'x^{*}  = 13 \le r_{0}^{9} = 13,</div*>
то мы не «дробим» задачу № 5, а просто вычёркиваем её из списка. Оценку
<div* lang="latex">r_{0}^{9} </div*>
 не меняем:
<div* lang="latex">r_{0}^{10} =r_{0}^{9} =13.</div*>

<br>
&emsp;
Переходим к шагу 1 новой итерации.
<br>
<br>
&emsp;<b>Итерация 10.</b> На новой итерации список пуст. Алгоритм заканчивает работу. Так как у нас
<div* lang="latex">\mu _{0} =1,</div*>
то вектор
<div* lang="latex">\mu </div*> принимаем за решение задачи:
<br>
<br> 
<div lang="latex" align="center">\mu =x^{0} =(0, 0, 1).</div>
<br>

Задача решена.


<br>
&emsp;Ход решение задачи схематично можно представить в виде дерева (см. <a href="#pic1_2">рис. 1.2</a>).
  <br>
  <br>
  &emsp;<strong> Замечания: </strong>
  <ol>
    <li>
В описаном выше алгоритме возможность произвольного выбора
      возникает в двух местах:
 <br>
      <br>
      <ul>
        <li>
при выборе задачи из списка;
</li>
        <li>
при выборе нецелой переменной, по которой производится
          ветвление.<br>
          <br>
          
</li>
      </ul>
      
<br>
&emsp;Число итераций метода зависит от того, какой именно выбор
      мы осуществим в этих пунктах.
      <br>
&emsp;
К настоящему времени разработаны специальные
      процедуры, помогающие оценить "качество" выбора. Это повышает эффективность
      алгоритма.<br>
      </li>
<br>
    <li>На любой итерации (кроме первой) мы имеем список задач,
      которые надо решить, и которые отличаются от породившей их задачи (решение
      которой уже найдено) <b>только одним</b> прямым ограничением. Для эффективного
      решения задач из списка можно использовать двойственный симплекс-метод [2, 9], выбирая в качестве начального двойственного
      базисного плана оптимальный двойственный план порождающей задачи.<br>
      </li>
  </ol>
  <br>
 
  <table width="100%" border="0">
    <tr>
      <td width="98%">
        <div align="center"><img id="pic1_2" src="../../images/lk1/img1_2/65.gif" width="800">
        <br><br><span>Рис. 1.2</span>
        </div>
      </td>
      <td width="2%">&nbsp;</td>
    </tr>
  </table>
  <br>
  <br>


<!%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%>
<br>
  <p class="title"><a name="t1.2.4"><b>1.2.4 Двойственный симплекс-метод для 
    задачи линейного программирования с двусторонними ограничениями</b></a></p><br>
	&emsp;Рассмотрим задачу линейного программирования следующего вида 
<br>
    <br>
  <table width="100%" border="0">
    <tr>
      <td width="98%"><img id="(30)">
        <div lang="latex" align="center">c'x\to \max </div>
<div lang="latex" align="center">Ax=b, </div>
<div lang="latex" align="center"> d_{*} \le x\le d^{*} </div>
      </td>
      <td width="2%">(30)</td>
    </tr>
  </table>

  
<br>
где 
<div* lang="latex"> A\in R^{m\times n} \, \, \, c,\, \, d_{*} ,\, \, \, d^{*} \in R^{n} ;\, \, b\in R^{m} ;</div*>

<div* lang="latex"> c=(c_{j} ,\, \, j=\overline{1,\, n}),\, \, d_{*} =(d_{*j} ,\, \, j=\overline{1,n}),</div*>

<div* lang="latex"> d^{*} =(d_{j}^{*} ,j=\overline{1,n}), </div*>

<div* lang="latex"> A=(A_{j} ,j=\overline{1,n}),\, \, \, A_{j} \in R^{m} </div*>-- заданные параметры задачи. Без ограничения общности будем считать, что 
<div* lang="latex"> rank\, \, A=m.</div*>

<br>
	&emsp;Подмножество индексов 
<div* lang="latex"> J_{B}=\{j_{1} ,j_{2} ,...,j_{m} \} \subset J= \{ 1,\, 2,\, ...,\, \, n\} </div*> 
назовем базисом задачи <a href="#(30)">(30)</a>, если  
<div* lang="latex" > \det \, \, A_{B} \ne 0</div*>,
 где
  <div* lang="latex"> A_B =(A_{j} ,\, j\in J_B )</div*> -- базисная матрица.

<br>
	&emsp;Решение задачи <a href="#(30)">(30)</a> двойственным методом начинается с задания некоторого базиса 
<div* lang="latex"> J_B ={\rm \{ }j_{1} ,j_{2} ,...,j_{m} {\rm \} }</div*> 
и соответствующей ему базисной матрицы 
<div* lang="latex" > A_B =(A_{j} ,j\in J_B)</div*>.
Матрицу, обратную к базисной, обозначим через 
<div* lang="latex"> B: \; \ B=A_B^{-1} </div*>.

<br>
<br>
	&emsp; Итерация метода состоит из следующих шагов.

<br>
	&emsp;<b> 1.</b>  Найдем <i>m</i>-вектор
<div lang="latex" align="center">  y':=c'_B B</div>
и оценки
<div lang="latex" align="center">\Delta _{j} :=y'A_{j} -c_{j} ,   j\in J;</div>
сформируем множества
<div lang="latex" align="center">J_{H} =J\backslash J_{B} ;{\kern 1pt} {\kern 1pt} \,  
  J_{H}^{+} =\{ j\in J_{H} :{\kern 1pt} {\kern 1pt} \, \Delta _{j} \ge 0\} ;   J_{H} =J_{H} \backslash J_{H}^{+} .</div>

<br> 
<br>
	&emsp;<b> 2.</b>  Построим вектор 
<div* lang="latex">\aleph =(\aleph _{j} ,j\in J)</div*> по следующему правилу:

<div lang="latex" align="center">\aleph_{j} =d_{*j} ,   j\in J_{H}^{+} ;  \;\;  \aleph _{j} =d_{j}^{*} ,   j\in J_{H}^{-} ;</div>
<br>
<div lang="latex" align="center">\aleph  =(\aleph _{j} ,\, j\in J_{{\rm }} )=B(b\,  -\sum _{j\, \in \, J_{H}^{+} \, \bigcup \, J_{H}^{-} }A_{j} \aleph _{j}  ).</div>

<br>
<br>
	&emsp;<b> 3.</b> 
 Проверим критерий оптимальности: если выполняются соотношения


<br>
    <br>
  <table width="100%" border="0">
    <tr>
      <td width="98%"><img id="(31)">
<div lang="latex" align="center"> d_{*j} \le \aleph _{j} \le d_{j}^{*} ,\, j\in J_{} ,
</div>
</td>
      <td width="2%">(31)</td>
    </tr>
  </table>

  
<br>
то вектор    
<div* lang="latex" > x^{0} :=\aleph =(\aleph _{j} ,j\in J)</div*>
 -- оптимальный план задачи <a href="#(30)">(30)</a>. Решение задачи <a href="#(30)">(30)</a> прекращается.
<br>

В противном случае (т.е. если соотношения <a href="#(31)">(31)</a> не выполняются) идем на шаг 4.

<br>
<br>
	&emsp;<b> 4.</b>  Найдем такой индекс 
<div* lang="latex">j_{k} \in J_{} </div*>, что      
<div* lang="latex">\aleph _{j_{k} } \notin {\rm [}d_{*j_{k} } ,d_{j_{k} }^{*} {\rm ]}</div*>.

<br>
<br>
	&emsp;<b> 5.</b>  Положим
<br>
<div  align="center"> <div* lang="latex">\mu _{j_k } =1</div*>,  если  <div* lang="latex"> \aleph _{j_{k} } < d_{* j_{k} } </div*>,</div>
<br>

 <div  align="center"><div* lang="latex">\mu _{j_{k} } =-1</div*>, если  <div* lang="latex">\aleph _{j_{k} } >d_{j_{k} }^{*} </div*>.</div>
<br>
<br>
	&emsp; Подсчитаем <i>m</i>-вектор
<br>
<div lang="latex" align="center">\Delta y'=\mu _{j_{k} } e'_{k} B</div>
<br>

и числа
<br>

<div lang="latex" align="center">\mu _{j} =\Delta y'A_{j} , \; j\in J_{H}^{+} \cup J_{H}^{-} .</div>

<br>
<br>
	&emsp;<b> 6.</b>  Найдем шаги 
<div* lang="latex">\sigma _{j}, \; j\in J_{H} =J_{H}^{+} \cup J_{H}^{-} </div*> по правилу:

<br>


<div lang="latex" align="center">\sigma _{j} =\left\{\begin{array}{l}
-\Delta _{j} /\mu _{j} ,\, \, \,\mbox{ if } j\in J_{H}^{+} \, \mbox{ and  } \mu _{j} &lt; 0\, \, \mbox{ or }
 \, \, j\in J_{H}^{-} \, \, \mbox{ and  } \mu _{j} &gt; 0\,  \\
  \\ \infty \, \, \mbox{ otherwise} \end{array}\right. </div>

<br>
 
 <br>
 
 Положим 
 <div* lang="latex">\sigma _{0} =\min \limits_{j\in \, J_{H} } \sigma _{j} =\sigma _{j_{*} } ,</div*> 
 здесь 
 <div* lang="latex">j_{*} \in J_{H} </div*> -- индекс, на котором достигается минимум в последнем выражении. Если минимум достигается на нескольких индексах, то в качестве индекса
 <div* lang="latex">j_{*} </div*> можно взять любой из них.
<br>
<br>
	&emsp;<b> 7.</b>  Если 
<div* lang="latex">\sigma _{0} =\infty</div*>, то прекращаем решение задачи  <a href="#(30)">(30)</a>, так как она не имеет допустимых планов. Если 
<div* lang="latex">\sigma _{0} &lt; \infty </div*>, идем на шаг 8.
<br>
<br>
	&emsp;<b> 8.</b>  Построим новый коплан 
 <div* lang="latex">\bar{\Delta }=(\bar{\Delta }_{j} ,j\in J)</div*>  по правилу:
<div lang="latex" align="center">\bar{\Delta }_{j} =\Delta _{j} +\sigma _{0} \mu _{j} , \;    j\in J_{H} \cup j_{k} ;</div>
<br>
<div lang="latex" align="center">\bar{\Delta }_{j} =0,\quad j\in J_{B} \backslash j_{k} .</div>

<br>
<br>
	&emsp;<b> 9.</b>  Построим новый базис 
<div* lang="latex">\bar{J}_{B} =(J_{} \backslash j_{k} )\cup j_{*} </div*>, соответствующую ему базисную матрицу 
<div* lang="latex">\bar{A}_{B} =(A_{j} ,j\in \bar{J}_{B} )</div*>  и обратную матрицу 
<div* lang="latex">\bar{B}=\bar{A}_{B}^{-1} </div*> по правилу 
<div* lang="latex">\bar{B}=M  B,</div*> где 
<div* lang="latex">m\times m-</div*>матрица 
<div* lang="latex">M</div*> получается из единичной 
<div* lang="latex">m\times m-</div*>матрицы заменой <i>k</i>-го столбца 
<div* lang="latex">e_{k} </div*>  на столбец 
<div* lang="latex">d</div*>:


<div lang="latex" align="center">e_{k} =\left(\begin{array}{c} {0} \\ {...} \\ {0} \\ {1} \\ {0} \\ {...} \\ {0} \end{array}\right),\, \, \, \, \, \, \, \, \, \, \, d=-\left(\begin{array}{c} {z_{1} } \\ {...} \\ {z_{k-1} } \\ {-1} \\ {z_{k+1} } \\ {...} \\ {z_{m} } \end{array}\right)\cdot \frac{1}{z_{k} } ,    z=\left(\begin{array}{c} {z_{1} } \\ {...} \\ {z_{k-1} } \\ {z_{k} } \\ {z_{k+1} } \\ {...} \\ {z_{m} } \end{array}\right)=BA_{j_{*} } .</div>
<br>
<br>
	&emsp;<b> 10.</b>  Поcтроим новые множества 
 <div* lang="latex">\bar{J}_{H} ,\; \bar{J}_{H}^{-}\;  </div*>  и 
 <div* lang="latex">\; \bar{J}_{H}^{+} </div*>:


<div lang="latex" align="center">\bar{J}_{H} =J\backslash \bar{J}_{} ;</div>
<br>

<div* lang="latex">\bar{J}_{H}^{+} =(J_{H}^{+} \backslash j_{*} )\cup j_{k} </div*>, если 
<div* lang="latex">\mu _{j_{k} } =1, \; j_{*} \in J_{H}^{+} </div*>;
<br>

 <div* lang="latex">\bar{J}_{H}^{+} =(J_{H}^{+} \backslash j_{*} )</div*>, если 
 <div* lang="latex">\mu _{j_{k} } =-1,\; j_{*} \in J_{H}^{+} </div*>;
<br>

 <div* lang="latex">\bar{J}_{H}^{+} =(J_{H}^{+} \cup j_{k} )</div*>, если 
 <div* lang="latex">\mu _{j_{k} } =1, \; j_{*} \notin J_{H}^{+} </div*>;
<br>

<div* lang="latex">\bar{J}_{H}^{+} =J_{H}^{+} </div*>, если 
<div* lang="latex">\mu _{j_{k} } =-1, \; j_{*} \notin J_{H}^{+} </div*>;
<div lang="latex" align="center">\bar{J}_{H}^{-} =\bar{J}_{H} \backslash \bar{J}_{H}^{+} .</div>
<br>



 <br>
	&emsp;Идем на шаг 2, используя новые базис 
 <div* lang="latex">\bar{J}_{{\rm }} </div*>, коплан 
 <div* lang="latex">\bar{\Delta }</div*>, базисную матрицу 
 <div* lang="latex">\bar{A}_{{\rm }} </div*> и обратную к ней матрицу 
 <div* lang="latex">\bar{B}.</div*>

<br>
<br>

&emsp; Совокупность шагов 2 -- 10 назовем итерацией 
<div* lang="latex">J_{B} \, \, \to \, \, \bar{J}_{B} .</div*> Данная итерация называется <i>невырожденной</i>, если 
<div* lang="latex">\sigma _{0} >0.</div*>

<br>
	&emsp;Можно показать, что описанный алгоритм решает задачу за конечное число итераций, если в процессе его реализации встречается конечное число вырожденных итераций.



<!ГОМОРИ!!!!%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%>
<br>
<br>
	<p class="title"><a name="t3"><b>1.3 Метод Гомори (метод отсечений) для полностью целочисленных задач</b></a></p>
	<p class="title"><a name="t1.3.1"><b>1.3.1. Интуитивное обоснование метода</b></a></p>

	&emsp; Отметим ещё одну особенность задач ЦЛП, которая отличает её от
  соответствующей задачи ЛП. Рассмотрим задачу:
<br>
    <br>
  <table width="100%" border="0">
    <tr>
      <td width="98%"><img id="(32)">
        <div lang="latex" align="center">c'x\to \max </div>
        <br>
<div lang="latex" align="center">Ax=b, </div>
      </td>
      <td width="2%">(32)</td>
    </tr>
  </table>
  
  
  
  
  

<br>
    <br>
  <table width="100%" border="0">
    <tr>
      <td width="98%"><img id="(33)"> 
      <div  align="center">
<div* lang="latex">x_{j}</div*> -- целое,  <div* lang="latex">j\in J,</div*>   
</div>
</td>
      <td width="2%">(33)</td>
    </tr>
  </table>

<br>

 где
<div* lang="latex">A\in \mathbb R^{m\times n} </div*>,
 <div* lang="latex">rank \ A= m &lt;  n, </div*>

<div* lang="latex"> J={\rm \{ }1,\, 2,\, ...,\, n{\rm \} }</div*>.

<br>
	&emsp;Если мы рассмотрим задачу ЛП <a href="#(32)">(32)</a> , то увидим, что среди оптимальных планов задачи <a href="#(32)">(32)</a> всегда существует базисный план,
 т. е. план, у которого не более чем \textit{m }компонент, отличных от нуля.

<br>
	&emsp;Рассмотрим теперь задачу ЦЛП <a href="#(32)">(32)</a>, <a href="#(33)">(33)</a> с <i>m</i> основными ограничениями.
 В общем случае оптимальный план задачи <a href="#(32)">(32)</a>, <a href="#(33)">(33)</a> будет содержать более чем 
<i>m</i> компонент, отличных от нуля. Это сразу же наводит на мысль о том, что если мы хотим получить решение целочисленной задачи 
<a href="#(32)">(32)</a>, <a href="#(33)">(33)</a> как решение некоторой «непрерывной» задачи ЛП, то эта «непрерывная» задача должна содержать 
более чем <i>m</i> основных ограничений, т.е. мы должны к задаче <a href="#(32)">(32)</a> добавить еще некоторые основные ограничения.

<br>
	&emsp;Необходимость введения новых ограничений в задачу <a href="#(32)">(32)</a> для получения решения задачи <a href="#(32)">(32)</a>, <a href="#(33)">(33)</a> 
можно объяснить и с другой позиции.

<br>
	&emsp; Рассмотрим множество допустимых планов <div* lang="latex">X </div*> задачи <a href="#(32)">(32)</a> (см. <a href="#pic1_3">рис. 1.3</a>).
 Понятно, что множеством допустимых планов
<div* lang="latex">X_{in} </div*>
задачи 
<a href="#(32)">(32)</a>, <a href="#(33)">(33)</a> будут все «целые» точки, принадлежащие
<div* lang="latex">X</div*>. 

<br>
	&emsp;Рассмотрим ещё одно множество
<div* lang="latex">X_{b} </div*>, называемое <i> выпуклой оболочкой</i> точек
<div* lang="latex">X_{in} </div*>.
 Согласно определению,
 <div* lang="latex">X_{b} </div*> --  это <b>наименьшее выпуклое </b> множество, содержащее все точки
 <div* lang="latex">X_{in} </div*> (см. <a href="#pic1_3">рис. 1.3</a>). Справедливы включения


<br>
    <br>
  <table width="100%" border="0">
    <tr>
      <td width="98%"><img id="(33)">
<div lang="latex" align="center">X_{in} \subset X_{b} \subset X</div>   
</td>
      <td width="2%">(33)</td>
    </tr>
  </table>




<table width="100%" border="0">
    
    <tr>
      <td width="98%">
        <div align="center"><img id="pic1_3" src="../../images/lk1/img1_3/Dop1_2.gif" width="300"></div><span>Рис. 1.3</span>
      </td>
      <td width="2%">&nbsp;</td>
    </tr>
  </table>






<br>
	&emsp;Множество
 <div* lang="latex">X_{b} </div*>,
  так же как и множество
  <div* lang="latex">X</div*>,
  является «непрерывным». Легко видеть, что все угловые точки множества
  <div* lang="latex">X_{b} </div*>
   -- целые точки. Отсюда, учитывая свойства симплекс-метода и включения <a href="#(34)">(34)</a>, заключаем, что среди решений задачи ЛП

<br>
    <br>
  <table width="100%" border="0">
    <tr>
      <td width="98%"><img id="(35)">
<div lang="latex"  align="center">c'x\to  \max, \; x\in X_{b}</div>
</td>
      <td width="2%">(35)</td>
    </tr>
  </table>
 обязательно есть целочисленное решение и это решение будет решением задачи <a href="#(32)">(32)</a>, <a href="#(33)">(33)</a>.


<br>
	&emsp; Мы видим, что множество
 <div* lang="latex">X_{b} </div*> получилось из
<div* lang="latex">X</div*> путём «отсечения» лишних кусков, не содержащих целых точек. При этом важно, что мы не отсекли ни одной целой точки! 

<br>
	&emsp;На рисунке для
<div* lang="latex">\mathbb R^{2} </div*> построить множество
<div* lang="latex">X_{b} </div*> просто. При большом  <i>n</i> сделать это заранее перед решением задачи невозможно. Кроме того, нам не надо всё «чистое» множество
<div* lang="latex">X_{b} </div*>. Нам важно «высечь» только часть этого множества в окрестности оптимальной точки.


<br>
<br>
  &emsp;На этих идеях отсечений и основан метод Гомори. Суть метода состоит в том, что на каждом шаге метода к ограничениям соответствующей
  задачи ЛП добавляется новое ограничение - отсекающая плоскость. Эта плоскость
  (это ограничение) должна обладать следующими свойствами:  
  <ol style="font-size: 14pt;">
    <li> отсекать имеющееся в наличии нецелочисленное решение задачи ЛП; </li>
    <li> не отсекать ни одного целочисленного плана исходной задачи ЦЛП; </li>
    <li> отсечения должны строится таким образом, чтобы обеспечить конечность алгоритма, то есть решение задачи ЦЛП должно строится за конечное число шагов. </li>
  </ol>

  <br>

<!%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%1-3-2>
    <p class="title"><a name="t1.3.2"><b>1.3.2 Построение отсекающей плоскости</b></a></p>
  &emsp;
Рассмотрим задачу ЛП вида <a href="#32">(32)</a>, <a href="#33">(33)</a>. Предположим, что 

  <ol>
    <li>
ограничения задачи <a href="#32">(32)</a>, <a href="#33">(33)</a> совместны;
      
</li>
    <li>
целевая функция ограничена сверху.
</li>
  </ol>

  
<br>
	&emsp;Прежде чем описать весь алгоритм, покажем в общем случае, как построить дополнительное ограничение, которому удовлетворяют 
все <b>целые</b>  планы задачи <a href="#(32)">(32)</a>, <a href="#(33)">(33)</a>.


<br>
	&emsp;Рассмотрим любое линейное уравнение, которое можно получить из уравнений <div* lang="latex"> Ax = b </div*>  путём алгебраических операций над этими уравнениями.
 В общем случае такое уравнение можно представить в виде



<br>
    <br>
  <table width="100%" border="0">
    <tr>
      <td width="98%"><img id="(36)">
<div lang="latex"  align="center">y'Ax=y'b,</div>
</td>
      <td width="2%">(36)</td>
    </tr>
  </table>


<br>


 где <div* lang="latex">y\in \mathbb R^m, \;\; y \not=0, </div*> -- произвольный вектор.


<br>
	&emsp;Очевидно, из условия <div* lang="latex">Ax = b</div*> следует справедливость <a href="#(36)">(36)</a>.


<br>
	&emsp;Обозначим

<br>
<br>
<div lang="latex"  align="center">a_{j} =y'A_{j}, \; j\in J,\;\; \beta  = y'b.</div>


<br>



Тогда равенство <a href="#(36)">(36)</a> примет вид


<br>
    <br>
  <table width="100%" border="0">
    <tr>
      <td width="98%"><img id="(37)">
<div lang="latex"  align="center">\sum _{j=1}^{n}a_{j} x_{j}  =\beta .</div>
</td>
      <td width="2%">(37)</td>
    </tr>
  </table>

<br>
<br>
	&emsp;
Предположим, что хотя бы одно из чисел
<div* lang="latex">a_{j} , \; j \in J,</div*>
 <div* lang="latex">\beta </div*> является дробным.
 

<br>
	&emsp; Как и раньше, обозначим через
  <div* lang="latex">[d]</div*>  целую часть числа
  <div* lang="latex">d; \;\; [d]</div*>  ---  наибольшее  целое, не превосходящее
  <div* lang="latex">d</div*>.

<br>
	&emsp;По построению любой вектор <div* lang="latex">x</div*>, удовлетворяющий
 <div* lang="latex">Ax=b</div*>, должен удовлетворять и <a href="#(37)">(37)</a>. Так как все
 <div* lang="latex">x_{j} \ge 0,\; j \in J,</div*> и
 <div* lang="latex">[a_j]\leq a_j, \; j \in J,</div*>  то из <a href="#(37)">(37)</a> следует более слабое условие


<br>
    <br>
  <table width="100%" border="0">
    <tr>
      <td width="98%"><img id="(38)">
<div lang="latex"  align="center">
\sum _{j=1}^{n}{\rm [}a_{j} \, {\rm ]}\, x_{j}  \le \beta .</div>
</td>
      <td width="2%">(38)</td>
    </tr>
  </table>





<br>

<br>
	&emsp;Теперь учтём, что по условию все

<div* lang="latex">x_{j}, \; j \in J,</div*>--  целые. Отсюда следует, что все целые


<div* lang="latex">x_{j}, \; j \in J,</div*>  удовлетворяющие <a href="#(38)">(38)</a>, должны удовлетворять более сильному, чем <a href="#(38)">(38)</a>, неравенству



<br>
    <br>
  <table width="100%" border="0">
    <tr>
      <td width="98%"><img id="(39)">
<div lang="latex"  align="center">
\sum _{j=1}^{n}{\rm [}a_{j} {\rm ]} \, x_{j} \le  [\beta ].</div>
</td>
      <td width="2%">(39)</td>
    </tr>
  </table>


<br>




<br>
	&emsp;Заметим, что в общем случае, без учёта целочисленности, из <a href="#(38)">(38)</a> не следует <a href="#(39)">(39)</a>!

<br>
	&emsp;Условие <a href="#(39)">(39)</a> можно переписать в эквивалентной форме



  


<br>
    <br>
  <table width="100%" border="0">
    <tr>
      <td width="98%"><img id="(40)">
<div   align="center">
<div* lang="latex"  >\sum _{j=1}^{n}{\rm [}a_{j} {\rm ]}\, x_{j}  + x_{*}  = [\beta ],  \; x_{*} \ge  0,  x_{*}</div*>  -- целое.</div>
</td>
      <td width="2%">(40)</td>
    </tr>
  </table>


<br>
    <br>
  












<br>
	&emsp; Таким образом, условие <a href="#(40)">(40)</a> есть новое условие, которому удовлетворяют все <b>целые</b> планы исходной задачи 
<a href="#(32)">(32)</a> -- <a href="#(33)">(33)</a>.

<br>
	&emsp;В алгоритме используется не условие <a href="#(40)">(40)</a>, а разность между <a href="#(40)">(40)</a> и <a href="#(37)">(37)</a>.

<br>
	&emsp;Определим значения
<div* lang="latex">f_{j} </div*> и
<div* lang="latex">f</div*>  тождественными


<br>
<br>

 <div lang="latex"  align="center">[a_{j} ] + f_{j} \equiv a_{j} ,  \; j\in J;\;\;   [\beta ] + f = \beta ,</div>
<br>

 т.е. <div* lang="latex">f_{j} </div*>  -- дробная часть числа
<div* lang="latex">a_{j} ,\; j\in J,</div*> а
<div* lang="latex">f</div*> -- дробная часть числа
<div* lang="latex">\beta </div*>.

<br>
	&emsp; По построению,

<br>

<br>


<div lang="latex"  align="center">0\le f_{j } &lt; 1,  \; j\in J,\;\;   0 \le  f &lt; 1.</div>
<br>

 Вычтем из <a href="#(40)">(40)</a> равенство <a href="#(37)">(37)</a>, в результате получим





<br>
    <br>
  <table width="100%" border="0">
    <tr>
      <td width="98%"><img id="(41)">
<div   align="center">
<div* lang="latex">\sum _{j=1}^{n}-f_{j} \, x_{j}  + x_*= -f, \; x_*\geq 0</div*>   -- целое.  </div>
</td>
      <td width="2%">(41)</td>
    </tr>
  </table>

<br>
<br>



	&emsp; В алгоритме вместо <a href="#(40)">(40)</a> используется отсекающее ограничение <a href="#(41)">(41)</a>.




<!%%%%%%%%%%%%%%%%%%%%%%%%%%1-3-3>



  <br>
  <br>
	<p class="title"><a name="t1.3.3"><b>1.3.3 Алгоритм Гомори (общая схема)</b></a></p>

  

 Общую схему алгоритма Гомори можно представить в виде последовательности следующих шагов.

<br>
	&emsp;<b>Шаг 1.</b>  Найти оптимальное решение задачи линейного программирования.

<br>
	&emsp;<b>Шаг 2.</b> Если в оптимальном базисе задачи ЛП есть искусственные индексы и размеры задачи ЛП велики, то уменьшаем размеры текущей задачи ЛП:
 удаляем из задачи ЛП искусственные переменные с базисными индексами и соответствующие им ограничения. В противном случае сразу переходим к шагу 3 без уменьшения размеров задачи ЛП.

 <br>
	&emsp;<b>Шаг 3.</b> Прекращаем решение задачи ЦЛП, если все неискусственные переменные задачи ЛП целые. В противном случае переходим к шагу 4.


<br>
	&emsp;<b>Шаг 4.</b> Сформируем отсекающую плоскость (ограничение). Для этого выберем любую дробную неискусственную переменную (это обязательно базисная переменная!)
 <div* lang="latex">x_{i_{0} }^{0}, \; i_{0} \in J_{B}^{0} </div*>.
 Здесь
 <div* lang="latex">J_{B}^{0} </div*> --- оптимальный базис текущей задачи ЛП. Положим
 <div* lang="latex">y'=e'_{k } (A_{B}^{0} )^{-1} </div*>, где
 <div* lang="latex">k</div*> --- порядковый номер индекса
  <div* lang="latex">i_0</div*> во множестве
  <div* lang="latex">J_B</div*>. 
	
	<br>
	&emsp;Сформируем отсекающее ограничение <a href="#(41)">(41)</a>, исходя из ограничения <a href="#(37)">(37)</a>, 
	построенного по правилам предыдущего пункта.


<br>
	&emsp;<b>Шаг 5.</b> Добавляем отсекающее ограничение <a href="#(41)">(41)</a> и новую (целую!) переменную
<div* lang="latex">x_{*} </div*> к задаче ЛП и получаем расширенную (новую) задачу ЛП. Переходим к шагу 1.
<br>
<br>
	&emsp;
Опишем перечисленные шаги алгоритма подробнее.

<br> 
<br>
	&emsp; Рассмотрим шаг 1. Пусть в текущей задаче ЛП есть переменные

 <div* lang="latex">x_{j}\ge 0, \;j \in  J \bigcup J_{u} ,</div*>

 и есть
<div* lang="latex">\bar{m}\ge m</div*> основных ограничений.

<br>
	&emsp; По построению
 <div* lang="latex">\bar{m} = m+ |J_{u}| </div*> и каждой искусственной переменной
 <div* lang="latex">x_{j_{*} } </div*> поставлено в соответствие некоторое основное ограничение текущей задачи ЛП.
<br>
	&emsp;
 Отметим, что это ограничение не входит в число основных ограничений исходной задачи ЛП или ЦЛП, т.е. является дополнительным отсекающим ограничением. 

<br>
	&emsp;
Решим текущую задачу ЛП и обозначим через

<br>
<br>
<div lang="latex" align="center">x_{j}^{0} ,  \; j \in J\bigcup J_{u} , \;\;  J_{B}^{0} \subset J\bigcup J_{u} ,  \; |J_{B}^{0} | =\bar{m}</div>

<br>

 ее оптимальный базисный план.

<br>
	&emsp;Опустим пока подробное описание шага 2, поскольку на первой итерации этот шаг «пропускается» и поэтому его удобнее описывать после описания всех других шагов.

<br>
	&emsp; Шаг 3 описан подробно ранее.\textbf{}

<br>
	&emsp; Рассмотрим шаг 4. Предположим, что выбран некоторый индекс
<div* lang="latex">i_{0} </div*>, такой, что

<br>
<div  align="center"> <div* lang="latex"> i_{0}\in J^0_B \subset J\bigcap J_{u},  \; x_{i_{0} }^{0} >0 </div*> -- нецелое.</div>

<br>
 <br>
	&emsp;Положим

<br>
<br>
<div lang="latex"  align="center">
y'=e'_{k} (A_{b}^{0} )^{-1} ,  \; a_{j} =y'A_{j} , \; j \in J\bigcup J_{u} , \;\;  \beta =y'b,</div>
<br>

 где
 <div* lang="latex">k</div*> --- порядковый номер индекса
 <div* lang="latex">i_{0} </div*> в базисе
 <div* lang="latex">J_{B}^{0} </div*>,
 <div* lang="latex">A_{j} </div*> ---
 <div* lang="latex"> j</div*>-й столбец матрицы условий и
 <div* lang="latex">b</div*> --- вектор правых частей основных ограничений текущей задачи ЛП.
  
	
	
	<br>
	&emsp;Рассмотрим ограничение
<br>
    <br>
  <table width="100%" border="0">
    <tr>
      <td width="98%"><img id="(42)">
<div lang="latex"  align="center">
\sum _{j\, \in J\, \bigcup \, \, J_{u} }a_{j} x_{j}  =\beta .</div>
</td>
      <td width="2%">(42)</td>
    </tr>
  </table>
	
<br>
<br>
	&emsp;
Так как по построению, в силу специального выбора вектора  <i>y</i>, имеют место равенства
<br>
<br>
<div lang="latex"  align="center"> a_{i_{0} } = 1,  a_{j} = 0,  j\in J_{B}^{0} \backslash i_{0} ,</div>
<br>

то равенство <a href="#(42)">(42)</a> можно представить в виде


<br>
    <br>
  <table width="100%" border="0">
    <tr>
      <td width="98%"><img id="(43)">
<div lang="latex"  align="center">
x_{i_{0} } +\sum _{j\in J_{{\rm H}} }a_{j}  x_{j} =\beta ,</div>
</td>
      <td width="2%">(43)</td>
    </tr>
  </table>


<br>


где
<div* lang="latex">J_{H}= (J \bigcup J_{u} )\setminus J_B^0</div*>.
Так как все
<div* lang="latex">x_{j }^{0} = 0,\;  j\in J_{H} </div*>, и вектор
 <div* lang="latex">x^{0} =(x_{j}^{0} ,j\in  J \bigcup J_{u}) </div*>  удовлетворяет <a href="#(43)">(43)</a>, то имеем
 <div* lang="latex">\beta= x_{i_{0} }^{0} >0 </div*> ---  нецелое. Отсекающее ограничение <a href="#(41)">(41)</a>, построенное по <a href="#(43)">(43)</a>, имеет вид


<br>
    <br>
  <table width="100%" border="0">
    <tr>
      <td width="98%"><img id="(44)">
<div   align="center">
<div* lang="latex">\sum \limits_{j\in J_{H} }-f_{j} x_{j}  + x_{j_{*} } =f,  \; x_{j_{*} }\ge  0</div*>  --- целое, </div>
</td>
      <td width="2%">(44)</td>
    </tr>
  </table>

<br>




 где
<div* lang="latex">x_{j_{*} } </div*> ---  новая переменная, соответствующая отсекающему ограничению <a href="#(44)">(44)</a>,
<div* lang="latex">j_{*} </div*> --- наименьший целый индекс, не принадлежащий множеству
 <div* lang="latex">J\bigcup J_{u} </div*>.

<br>
	&emsp; Рассмотрим шаг 5.\textbf{ }Ограничение <a href="#(44)">(44)</a> добавляем к основным ограничениям имеющейся задачи ЛП, индекс
<div* lang="latex">j_{*} </div*> и соответствующую ему переменную
<div* lang="latex">x_{j_{*} } </div*>  добавляем к переменным текущей задачи ЛП. При этом произойдут следующие замены:
<br>
<br>

<div lang="latex"  align="center">\bar{m}\to \bar{m}+1;  \;\; J \bigcup J_{u} \to  J \bigcup \bar{J}_{u} , \;  \bar{J}_{u} =J_{u}\bigcup j_{*} .</div> 
<br>
<br>
	&emsp; Покажем, что добавляемое новое ограничение <a href="#(44)">(44)</a> является «отсекающим», т.е. оно отсекает нецелочисленное оптимальное решение «старой» задачи ЛП. Действительно, на оптимальном плане
<div* lang="latex">x^{0} </div*>
 «старой» задачи ЛП имеют место соотношения:

<div* lang="latex">x_{j} ^{0}=0, \; j\in J_{H}, </div*> и по построению,
<div* lang="latex">0\leq f  &lt; 1.</div*>  Следовательно, для выполнения ограничения <a href="#(44)">(44)</a> надо положить
<div* lang="latex">x_{j_{*} }^{0} = -f  &lt; 0.</div*>
 Однако это противоречит условию
 <div* lang="latex">x_{j_{*} }^{0}\geq  0. </div*>

<br>
	&emsp; Таким образом, мы видим, что оптимальный план «старой» задачи ЛП не удовлетворяет ограничению <a href="#(44)">(44)</a> и,
 следовательно, не является планом новой задачи ЛП. В этой ситуации новую задачу ЛП разумно решать двойственным симплекс-методом [2, 8], 
начиная процесс вычисления с оптимального двойственного базисного плана старой задачи ЛП.

<br>
	&emsp;Отметим, что если оказалось, что
<div* lang="latex">f_{j} =0,j\in J_{H} ,</div*>
то прекращаем решение исходной задачи, т.к. у нее нет допустимых (целочисленных) планов
<br>
<br>
	&emsp;
Рассмотрим шаг 2. Для того чтобы размеры задачи ЛП не росли неограниченно, поступаем следующим образом. Если
<div* lang="latex">J_{B}^{0} \bigcap J_{u} \ne \emptyset, </div*>
то перед тем, как построить новое отсекающее ограничение, выбросим отсекающее ограничение, породившее искусственную переменную
 <div* lang="latex">x_{j_{*} }, \; j_{*} \in J_{B}^{0} \bigcap J_{u </div*>.

  <br>
	&emsp;Исключим из задачи ЛП искусственную переменную
  <div* lang="latex">x_{j_{*} } </div*>, подставив вместо неё в другие отсекающие ограничения, содержащие переменную
  <div* lang="latex">x_{j_{*} } </div*>, её выражение через другие переменные, найденное из «выбрасываемого» отсекающего ограничения.

<br>
	&emsp;Дополнительное ограничение, соответствующее
<div* lang="latex">x_{j_{*} } </div*>, можно выбросить, так как вхождение искусственной переменной
<div* lang="latex">x_{j_{*} } </div*> в оптимальный базис означает, что это ограничение пассивно. 
Используя эту процедуру выбрасывания лишних ограничений, всегда можно добиться того, что в решаемой задаче ЛП будет не более чем <i>n</i>  основных ограничений.
<br>
<br>
	&emsp;

<b>Замечание.</b>  В алгоритме сказано, что для построения отсекающей плоскости можно выбирать любую дробную неискусственную переменную. 
Для ускорения процесса решения задачи обычно рекомендуют следующее правило такой компоненты:

<br>

<br>
	&emsp;A)  для построения отсекающей плоскости следует выбирать
 переменную с   максимально дробной частью.



<br>
	&emsp;Действительно, при таком выборе отсекающая плоскость, как правило, отсекает «больший кусок» от множества допустимых планов текущей задачи ЛП. Однако при использовании этого правила совместно с процедурой сокращения размеров задачи, нельзя гарантировать конечность алгоритма. Для обеспечения конечности (теоретической) алгоритма необходимо использовать следующее правило:


<br>
	&emsp;Б)  для построения отсекающей плоскости нужно выбрать дробную неискусственную переменную с наименьшим индексом
<div* lang="latex">j.</div*>



<br>
	&emsp;Теоретически доказано, что если целевая функция ограничена на множестве планов и используется правило Б), то описанный алгоритм решает задачу за конечное число итераций.



<br>
	&emsp;В процессе решения задачи можно комбинировать правила А) и Б) следующим образом: Использовать правило А), 
если на текущей итерации оптимальное значение целевой текущей задачи ЛП не равно оптимальному значению целевой 
функции задачи ЛП на предыдущей итерации. В противном случае надо использовать правило Б).




<!%%%%%%%%%%EXAMPLE>

<br>


  <br>
  &emsp;<strong><span id="t1.3.4">Пример.</span> </strong>Рассмотрим задачу
 <br>

<br>
    <br>
  <table width="100%" border="0">
    <tr>
      <td width="98%"><img id="(45)">
<div lang="latex"  align="center">
21 x_1+11x_2\to \max,</div>
</td>
      <td width="2%">(45)</td>
    </tr>
  </table>

<br>
    <br>
  <table width="100%" border="0">
    <tr>
      <td width="98%"><img id="(46)">
<div lang="latex"  align="center">
7x_1+4x_2+x_3=13,\; x_j\geq 0, j=\overline{1,3},</div>
</td>
      <td width="2%">(46)</td>
    </tr>
  </table>

<br>
    <br>
  <table width="100%" border="0">
    <tr>
      <td width="98%"><img id="(47)">
<div  align="center">
<div* lang="latex">x_{j}</div*>  -- целое,    <div* lang="latex">j=\overline{1,3}</div*>.</div>
</td>
      <td width="2%">(47)</td>
    </tr>
  </table>








<br>
	&emsp; Решим данную задачу методом Гомори. Алгоритм опишем по итерациям.

<br>
	&emsp;<b>Итерация 1.</b>  Решим задачу ЛП <a href="#(45)">(45)</a>, <a href="#(46)">(46)</a> симплекс-методом [2, 9].
 В результате получим оптимальный базисный план
<br>

<div lang="latex"  align="center">x_{1}^{0}  = \frac{13}{7} ,  x_{2}^{0}  = x_{3}^{0} = 0,  J_{B}^{0}  = \{1\}.</div>

<br>

Базисная матрица
 <div* lang="latex">A_{B} =(A_{j} ,j\in J_{B}^{0} )</div*> и обратная к ней матрица
 <div* lang="latex">A_{B}^{{-1}} </div*> имеют вид
<br>

<div lang="latex"  align="center">A_{B} =7,  A_{B}^{{ -1}}  = \frac{1}{7} .</div>
<br>
<br>
	&emsp;Выберем
<div* lang="latex">i_{0} =1,</div*>  подсчитаем вектор
 <div* lang="latex">y'=e'_{1 } A_{B}^{-1} =\frac{1}{7} </div*>
  и получим ограничение вида <a href="#(37)">(37)</a>
	
	<br>
	<br>
<div lang="latex"  align="center">x_{1}  + \frac{4}{7} x_{2}  + \frac{1}{7} x_{3}  = 1\frac{6}{7} .</div>

<br>
	&emsp;По последнему ограничению построим отсекающее ограничение вида <a href="#(41)">(41)</a>

<br>
    <br>
  <table width="100%" border="0">
    <tr>
      <td width="98%"><img id="(48)">
<div lang="latex"  align="center">
-\frac{4}{7} x_{2}  -\frac{1}{7} x_{3}  + x_{4}  = -\frac{6}{7} ,  x_{4} \ge 0.</div>
</td>
      <td width="2%">(48)</td>
    </tr>
  </table>





<br>
	&emsp;
Добавим ограничение <a href="#(48)">(48)</a> к задаче <a href="#(45)">(45)</a>, <a href="#(46)">(46)</a> и перейдем к следующей итерации.

<br>
<br>
	&emsp;<b>Итерация 2.</b>  Решим задачу ЛП <a href="#(45)">(45)</a>, <a href="#(46)">(46)</a>, <a href="#(48)">(48)</a>. Она имеет решение:
<br>
<br>
<div lang="latex"  align="center">x_{1}^{0}  = 1,  x_{2}^{0}  = 1\frac{1}{2} ,  x_{3}^{0}  = 0,  x_{4} ^{0}  = 0,  J_{B}^{0}  = \{1, 2\}.</div>
<br>

Базисная матрица
 <div* lang="latex">A_{B} =(A_{j} ,j\in J_{B}^{0} )</div*>
 и обратная к ней матрица
  <div* lang="latex">A_{B}^{{-1}} </div*> имеют вид
<div lang="latex"  align="center">A_{B} =\left(\begin{array}{cc} {7} & {4} \\ {0} & {-\frac{4}{7} } \end{array}\right), 
A_{B} ^{-1} =\left(\begin{array}{cc} {\frac{1}{7} } & {1} \\ {0} & {-\frac{7}{4} } \end{array}\right).</div>

<br>
	&emsp;Выберем <div* lang="latex">i_{0}  = 2,</div*> положим
<div* lang="latex">y' = (0, 1) A_{B}^{-1}  = (0, -\frac{7}{4} ).</div*>
 <br>
	&emsp;Используя найденный вектор <i>y,</i> построим ограничение вида


<br>
    <br>
  <table width="100%" border="0">
    <tr>
      <td width="98%"><img id="(49)">
<div lang="latex"  align="center">
\sum _{j\in J_{ H} }a_{j} x_{j}  =\beta ,</div>
</td>
      <td width="2%">(49)</td>
    </tr>
  </table>
<br>




где
<div* lang="latex">a_{j} =y'A_{j} , \; \beta =y'b.</div*>

<br>
	&emsp;На данной итерации матрица условий
<div* lang="latex">A</div*>
 и вектор правых частей
<div* lang="latex">b</div*>
  текущей задачи ЛП имеют вид

<br>
<br>



<div lang="latex"  align="center">
A=\left(\begin{array}{cccc} {7} & {4} & 1 & 0 \\
{0} & {-\frac{4}{7} } & -\frac{1}{7} & 1 \end{array}\right),\;\;
b=\left(\begin{array}{c} { 13} \\ {-\frac{6}{7} } \end{array}\right).</div>
<br>
<br>
 Следовательно,

 <div* lang="latex">a_{1} =0,  \; a_{2} =1, \;  3a_{3} =1/4,  \; a_{4} =-7/4, \;\;  \beta =3/2 </div*>
 и ограничение <a href="#(49)">(49)</a>принимает вид
 <div* lang="latex">x_{2} +\frac{1}{4} x_{3} -\frac{7}{4} x_{4}  = 3/2.</div*>

<br>
	&emsp; По этому ограничению сформируем отсекающее ограничение вида <a href="#(41)">(41)</a>



<br>
    <br>
  <table width="100%" border="0">
    <tr>
      <td width="98%"><img id="(50)">
<div lang="latex"  align="center">
-\frac{1}{4} x_{3} -\frac{1}{4} x_{4} +x_{5} = -\frac{1}{2} , x_5\geq 0.</div>
</td>
      <td width="2%">(50)</td>
    </tr>
  </table>
<br>



Добавим ограничение <a href="#(50)">(50)</a> к задаче <a href="#(45)">(45)</a>, <a href="#(46)">(46)</a>, <a href="#(48)">(48)</a> и перейдем к следующей итерации.
<br>
<br>
	&emsp;
<b>Итерация 3.</b>  Решим задачи ЛП <a href="#(45)">(45)</a>, <a href="#(46)">(46)</a>, <a href="#(48)">(48)</a>}, <a href="#(50)">(50)</a> симплекс-методом.
 В результате будет найдено ее решение
<br>
<br>
<div lang="latex"  align="center">x_{1}^{0} =0,  x_{2}^{0} =3,  x_{3}^{0} =1,  x_{4}^{0} = 1,  x_{5}^{0} =0,  J_{B}^{0} =\{2, 3, 4\}.</div>
<br>
Это решение является целочисленным. Следовательно, оно является решением исходной задачи ЦЛП <a href="#(45)">(45)</a> -- <a href="#(47)">(47)</a>.

<br>
	&emsp;Отметим, что если бы последнее решение было нецелочисленным, то на следующей итерации перед началом формирования 
нового отсекающего ограничения мы удалили бы из последней задачи ЛП (т.е. из задачи <a href="#(45)">(45)</a>
 <a href="#(46)">(46)</a>, <a href="#(48)">(48)</a>, <a href="#(50)">(50)</a>) ограничение <a href="#(48)">(48)</a>, «породившее» искусственную переменную
 <div* lang="latex">x_{4} </div*>,
 которая вошла в оптимальный базис, а в остальные ограничения (например,
 в <a href="#(50)">(50)</a>
 подставили бы вместо переменной
  <div* lang="latex">x_{4} </div*>
  ее выражение через другие переменные, найденное из <a href="#(48)">(48)</a>, т. е. в <a href="#(50)">(50)</a> вместо
   <div* lang="latex">x_{4} </div*> подставили бы


<div lang="latex"  align="center">x_{4}  = \frac{4}{7} x_{2}  + \frac{1}{7} x_{3}  -- \frac{6}{7} .</div>
В результате ограничение <a href="#(50)">(50)</a> приняло бы вид
<br>
<br>
<div   align="center"> <div* lang="latex">-\frac{1}{7} x_{2} -\frac{2}{7} x_{3} =-\frac{5}{7}  </div*> или
<div* lang="latex">x_{2} +2x_{3} =5.</div*></div>



  

	<div title="Bottom">
		<p>&nbsp;</p>
		<hr size="2" width="100%" align="center">
		<h1 class="Bottom">
			<a href="../../theory.htm">[оглавление]</a>
			<a href="../lk2/lk2.htm">[следующая тема]</a>
		</h1>
	</div>
</body>
</html>